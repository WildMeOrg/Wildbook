#DataNucleus parameters for object persistence

# The following two lines create a connection to an embedded Apache Derby database.
#datanucleus.ConnectionDriverName=org.apache.derby.jdbc.EmbeddedDriver
#datanucleus.ConnectionURL=jdbc:derby:shepherd_derby_database;create=true

# The following two lines create a connection to a SQLite database.
# You will also need to add the JDBC JAR file for your SQLite version to /WEB-INF/lib.
#datanucleus.ConnectionDriverName=org.sqlite.JDBC
#datanucleus.ConnectionURL=jdbc:sqlite:shepherd_sqlite_database

# The following two lines create a connection to a SQL Server or SQL Azure database.
#datanucleus.ConnectionDriverName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#datanucleus.ConnectionURL=jdbc:sqlserver://<database_server>.database.windows.net:1433;database=<database_name>;user=<username>@<database_server>;password=<database_password>;encrypt=true;hostNameInCertificate=*.database.windows.net;loginTimeout=30;create=true


# The following two lines create a connection to an H2 database.
# You will also need to add the JDBC JAR file for your H2 version to /WEB-INF/lib.
#datanucleus.ConnectionDriverName=org.h2.Driver
#datanucleus.ConnectionURL=jdbc:h2:shepherd_h2_database

# The following three lines create a connection to a MySQL database.
# You will also need to add the JDBC JAR file for your MySQL version to /WEB-INF/lib.
#datanucleus.ConnectionDriverName=com.mysql.jdbc.Driver
#datanucleus.ConnectionURL=jdbc:mysql://localhost:3306/shepherd

# The following lines can be used for PostgreSQL data storage.
# You will also need to add the JDBC JAR file for your PostgreSQL version to /WEB-INF/lib.
datanucleus.ConnectionDriverName=org.postgresql.Driver
datanucleus.ConnectionURL = jdbc:postgresql://project_app-db_1:5432/wildbook

javax.jdo.PersistenceManagerFactoryClass = org.datanucleus.api.jdo.JDOPersistenceManagerFactory
datanucleus.ConnectionUserName = wildbook              
datanucleus.ConnectionPassword = wildbook
datanucleus.schema.autoCreateAll = true
#datanucleus.generateSchema.database.mode = create
datanucleus.NontransactionalRead = true
datanucleus.Multithreaded = true
datanucleus.RestoreValues = true
datanucleus.storeManagerType = rdbms
datanucleus.maxFetchDepth = -1
datanucleus.cache.collections.lazy = false

#connection pooling
datanucleus.connectionPoolingType = dbcp2

# Pooling of Connections
datanucleus.connectionPool.maxIdle=10
datanucleus.connectionPool.minIdle=5
datanucleus.connectionPool.maxActive=30
datanucleus.connectionPool.maxWait=-1

datanucleus.connectionPool.testSQL=SELECT 1

datanucleus.connectionPool.timeBetweenEvictionRunsMillis=240000

